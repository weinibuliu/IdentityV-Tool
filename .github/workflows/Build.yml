name: Build

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
    paths:
      - "install/**"
      - "resource/**"
      - "deps/**"
      - ".github/**"

  pull_request:
    branches:
      - "**"
    paths:
      - "install/**"
      - "resource/**"
      - "deps/**"
      - ".github/**"

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - id: set_tag
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          tag=$(git describe --tags --match "v*" ${{ github.ref }} || true)
          if [[ $tag != v* ]]; then
            tag=$(curl -sX GET "https://api.github.com/repos/${{ github.repository }}/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | awk '/tag_name/{print $4}' FS='["]')
            if [[ $tag != v* ]]; then
              tag="v0.0.0"
            fi
            tag=$(date "+$tag-%y%m%d-$(git rev-parse --short HEAD)")
          fi
          if ! $($is_release) ; then
            prefix=${tag%-*-*}
            suffix=${tag#$prefix-}
            tag="$prefix-ci.$suffix"
          fi
          echo tag=$tag | tee -a $GITHUB_OUTPUT
          echo is_release=$is_release | tee -a $GITHUB_OUTPUT
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      is_release: ${{ steps.set_tag.outputs.is_release }}

  Windows:
    needs: meta
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [aarch64,x86_64]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download MaaFramework
      uses: robinraju/release-downloader@v1.11
      with:
        repository: MaaXYZ/MaaFramework
        fileName: "MAA-win-${{ matrix.arch }}*"
        latest: true
        out-file-path: "deps"
        extract: true

    - name: Move deps to install
      run: |
        move .\deps\bin\* .\install\res
        move .\deps\share\MaaAgentBinary .\install\res
        cp .\README.md .\install
        cp .\LICENSE .\install

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd .\install
        pip install -r requirements.txt

    #- name: Copy DLL files to Python directory
      #run: |
        #cp .\DLLs\msvcp140.dll C:\hostedtoolcache\windows\Python\3.12.4\x64
        #cp .\DLLs\vcruntime140.dll C:\hostedtoolcache\windows\Python\3.12.4\x64
        #cp .\DLLs\vcruntime140_1.dll C:\hostedtoolcache\windows\Python\3.12.4\x64

    - name: Build executable
      run: |
        cd .\install\
        python build.py
        move .\dist\IdentityV_Tool.exe .\

    - name: Get current commit ID
      run: |
        echo $env:GITHUB_SHA > version
      shell: pwsh

    - name: Upload Assets
      uses: actions/upload-artifact@v4
      with:
        name: IdentityV_Tool-${{ matrix.arch }}-${{ needs.meta.outputs.tag }}
        path: |
          .\install
          !.\install\deps
          !.\install\build
          !.\install\*.spec
          !.\install\*.py
          !.\install\requirements.txt

  release:
    if: ${{ needs.meta.outputs.is_release == 'true' }}
    needs: [meta, windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: assets

      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
          done
      - uses: softprops/action-gh-release@v2
        with:
          files: assets/*
          tag_name: ${{ needs.meta.outputs.tag }}